{"id":412,"assetBundleId":-1,"data":[[],"Horus\/UnLit\/IgnoreYarn",null,["INSTANCING_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[0,0,"",0,"",0,[4,null],[1,null],[2,null],[[1,null],[0,null],[0,null]],[[1,null],[0,null],[0,null]],[15,null],[0,null],[0,null],[128,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[6,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["RenderType","Opaque"]],["INSTANCING_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[],[[0,0,[],"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _NormalMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nfloat u_xlat9;\nvoid main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;\n    vs_TEXCOORD2.xy = in_TEXCOORD1.xy;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = u_xlat0.xyz;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx;\n    u_xlat0.xyz = u_xlat0.yzx * u_xlat1.zxy + (-u_xlat2.xyz);\n    vs_TEXCOORD5.xyz = u_xlat0.xyz * in_TANGENT0.www;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD6.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _LightDir;\nuniform \tvec4 _Color;\nuniform \tfloat _Brightness;\nuniform \tfloat _Ambient;\nuniform \tfloat _DiffusePower;\nuniform lowp sampler2D _NormalMap;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nvec4 u_xlat1;\nlowp vec4 u_xlat10_1;\nlowp vec2 u_xlat10_2;\nmediump vec2 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat12 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * vs_TEXCOORD5.xyz;\n    u_xlat10_2.xy = texture2D(_NormalMap, vs_TEXCOORD1.xy).yw;\n    u_xlat16_3.xy = u_xlat10_2.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat16_3.yyy;\n    u_xlat0.xyz = u_xlat16_3.xxx * u_xlat0.xyz + u_xlat1.xyz;\n    u_xlat16_3.x = dot(u_xlat16_3.xy, u_xlat16_3.xy);\n    u_xlat16_3.x = min(u_xlat16_3.x, 1.0);\n    u_xlat16_3.x = (-u_xlat16_3.x) + 1.0;\n    u_xlat16_3.x = sqrt(u_xlat16_3.x);\n    u_xlat12 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD3.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * vs_TEXCOORD3.xyz;\n    u_xlat0.xyz = u_xlat16_3.xxx * u_xlat1.xyz + u_xlat0.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    u_xlat12 = dot(_LightDir.xyz, _LightDir.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * _LightDir.xyz;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat0.x = _DiffusePower * u_xlat0.x + _Ambient;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 * _Color;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz * vec3(_Brightness);\n    SV_Target0 = u_xlat1;\n    return;\n}\n\n",0,0],[0,0,[],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _NormalMap_ST;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TANGENT0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec2 vs_TEXCOORD0;\nout highp vec2 vs_TEXCOORD1;\nout highp vec2 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nout highp vec3 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec3 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nfloat u_xlat9;\nvoid main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _NormalMap_ST.xy + _NormalMap_ST.zw;\n    vs_TEXCOORD2.xy = in_TEXCOORD1.xy;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = u_xlat0.xyz;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx;\n    u_xlat0.xyz = u_xlat0.yzx * u_xlat1.zxy + (-u_xlat2.xyz);\n    vs_TEXCOORD5.xyz = u_xlat0.xyz * in_TANGENT0.www;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD6.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _LightDir;\nuniform \tvec4 _Color;\nuniform \tfloat _Brightness;\nuniform \tfloat _Ambient;\nuniform \tfloat _DiffusePower;\nUNITY_LOCATION(0) uniform mediump sampler2D _NormalMap;\nUNITY_LOCATION(1) uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin highp vec2 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD3;\nin highp vec3 vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec2 u_xlat16_2;\nmediump vec2 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat12 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * vs_TEXCOORD5.xyz;\n    u_xlat16_2.xy = texture(_NormalMap, vs_TEXCOORD1.xy).yw;\n    u_xlat16_3.xy = u_xlat16_2.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat16_3.yyy;\n    u_xlat0.xyz = u_xlat16_3.xxx * u_xlat0.xyz + u_xlat1.xyz;\n    u_xlat16_3.x = dot(u_xlat16_3.xy, u_xlat16_3.xy);\n    u_xlat16_3.x = min(u_xlat16_3.x, 1.0);\n    u_xlat16_3.x = (-u_xlat16_3.x) + 1.0;\n    u_xlat16_3.x = sqrt(u_xlat16_3.x);\n    u_xlat12 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD3.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * vs_TEXCOORD3.xyz;\n    u_xlat0.xyz = u_xlat16_3.xxx * u_xlat1.xyz + u_xlat0.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    u_xlat12 = dot(_LightDir.xyz, _LightDir.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * _LightDir.xyz;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat0.x = _DiffusePower * u_xlat0.x + _Ambient;\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1 * _Color;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.xyz * vec3(_Brightness);\n    SV_Target0 = u_xlat1;\n    return;\n}\n\n",1,0]],[],0]],[],[["_MainTex",4,0,0,0,0,"white",0],["_NormalMap",4,0,0,0,0,"bump",0],["_Color",0,1,1,1,1,"",0],["_Brightness",3,1,0.100000001490116,10,0,"",0],["_Ambient",3,0.300000011920929,0,1,0,"",0],["_DiffusePower",3,0.699999988079071,0,2,0,"",0],["_LightDir",1,0.400000005960464,1,0.600000023841858,0,"",0]],14,66,0,0,0]}